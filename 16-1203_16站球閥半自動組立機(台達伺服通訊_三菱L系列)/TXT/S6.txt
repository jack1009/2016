(******************************************************************)
(*程式:Station 6 Control Program
作者Andy Wang
版本資訊:v1.0		2017/04/05
********************************************************************
控制程式*)
(*PowerOn=0*)
(*Idle=1*)
(*上下出=2*)
(*上下回=3*)
(*********************************************************************)
(*復歸程式*)
(*PowerOn=0*)
(*Idle=1*)
(*上下回=2*)
(******************************************************************)
(*本站狀態判斷*)
IF IndexData[6].OKFlag[6]
	OR IndexData[6].NGFlag[6] THEN
	IndexData[6].FinishFlag[6]:=TRUE;
END_IF;

IF NOT(IndexData[6].FinishFlag[5]
	AND IndexData[6].OKFlag[5]
	AND NOT(IndexData[6].NGFlag[5])) THEN
	IndexData[6].NGFlag[6]:=TRUE;
END_IF;

IF DisablePB[6] AND IndexData[6].FinishFlag[2] AND IndexData[6].OKFlag[2] AND NOT(IndexData[6].NGFlag[2]) THEN
	IndexData[6].OKFlag[6]:=TRUE;
END_IF;

Rtrig_test(_CLK:=TestPB[6]);
(*PowerOn=0*)
IF NOT(SystemReadyStatus) THEN
	Autoflow:=0;
END_IF;

(*Idle=1*)
IF AutoFlow=0 AND SystemReadyStatus AND NOT(ErrorStatus[6]) AND EStopPB THEN
	AutoFlow:=1;
END_IF;
ORGFlag[6]:=AutoStatus
AND S6_Up_LS;

IF Autoflow=3 AND S6_Up_LS THEN
	Autoflow:=1;
END_IF;

IF Autoflow=1 THEN		(*IDLE狀態*)
	AutoIdle[6]:=TRUE;
	ELSE
	AutoIdle[6]:=FALSE;
END_IF;
(*上下出=2*)
IF Autoflow=1
	AND AutoStatus
	AND NOT(DisablePB[6])
	AND ORGFlag[6]
	AND (MachineRunStatus AND NOT(IndexData[6].FinishFlag[6]) AND IndexData[6].FinishFlag[5] AND IndexData[6].OKFlag[5] AND NOT(IndexData[6].NGFlag[5])
	OR Rtrig_test.Q) THEN
	Autoflow:=2;
END_IF;
(*上下回=3*)
TON_1(IN:= Autoflow=2 AND S6_Down_LS AND S6_UpDown_SOL ,PT:=t#500ms );
TON_2(IN:= Autoflow=2 AND NOT(S6_Down_LS) AND S6_UpDown_SOL ,PT:=t#2s );
IF Autoflow=2 AND TON_1.Q THEN
	IndexData[6].OKFlag[6]:=TRUE;
        Autoflow:=5;

END_IF;
IF Autoflow=2 AND TON_2.Q THEN
	IndexData[6].NgFlag[6]:=TRUE;
	IndexData[6].ErrorRecordData[6]:=4;
        Autoflow:=6;
END_IF;
IF Autoflow=5 OR Autoflow=6  THEN
	Autoflow:=3;
END_IF;
(*************************************************************************)
(*Error*)
IF NOT(SystemReadyStatus) OR ErrorStatus[6] OR NOT(EStopPB)  THEN
	IF NOT(IndexData[6].OKFlag[6]) THEN
		IndexData[6].NGFlag[6]:=TRUE;
	END_IF;
	Autoflow:=0;
END_IF;
(*次數異常
IF ResetPB THEN
ErrorCounter:=0;
END_IF;
IF ErrorCounter>=2 THEN
CountError[6]:=TRUE;
END_IF;*)
(*手動*)
(*上下*)
R_TRIG_1(_CLK:= S6_UpDown_PB);
interlockdown:=Index_LS AND NOT(Index_RY);
(*SET*)
IF ((R_TRIG_1.Q AND NOT(UpDownStatus)) OR Autoflow=2) AND interlockdown THEN
	S6_UpDown_SOL:=TRUE;
END_IF;
(*RESET*)
interlockUp:=TRUE;
IF ((R_TRIG_1.Q AND (UpDownStatus)) OR Autoflow=3 OR Initflow=2) AND interlockUp THEN
	S6_UpDown_SOL:=FALSE;
END_IF;
(*STATUS*)
UpDownStatus:=S6_UpDown_SOL;
(********************************************************************)
(*PowerOn=0*)
IF NOT(SystemReadyStatus) THEN
	Initflow:=0;
END_IF;

(*Idle=1*)
IF Initflow=0 THEN
	Initflow:=1;
END_IF;

IF Initflow=2 AND S6_Up_LS THEN
	Initflow:=1;
END_IF;

IF Initflow=1 THEN		(*IDLE狀態*)
	InitIdle[6]:=TRUE;
	ELSE
	InitIdle[6]:=FALSE;
END_IF;
(*上下回=2*)
F_TRIG_1(_CLK:= ErrorStatus[6]);
R_TRIG_2(_CLK:= AutoStatus );
R_TRIG_3(_CLK:= NOT(EStopPB));
IF Initflow=1 AND (F_TRIG_1.Q OR R_TRIG_2.Q OR R_TRIG_3.Q ) THEN
	Initflow:=2;
END_IF;