(*****************************************************************
程式:Station 8 Control Program
作者Andy Wang
版本資訊:v1.0		2017/04/05
********************************************************************
控制程式*)
(*PowerOn=0*)
(*Idle=1*)
(*上下出=2*)
(*上下回=3*)
(*******************************************************************
復歸程式*)
(*PowerOn=0*)
(*Idle=1*)
(*上下回=2*)
(******************************************************************)
(*本站狀態判斷*)
IF IndexData[8].OKFlag[8]
	OR IndexData[8].NGFlag[8] THEN
	IndexData[8].FinishFlag[8]:=TRUE;
END_IF;

IF NOT(IndexData[8].FinishFlag[7]
	AND IndexData[8].OKFlag[7]
	AND NOT(IndexData[8].NGFlag[7])) THEN
	IndexData[8].NGFlag[7]:=TRUE;
END_IF;

IF DisablePB[8] AND IndexData[8].FinishFlag[2] AND IndexData[8].OKFlag[2] AND NOT(IndexData[8].NGFlag[2]) THEN
	IndexData[8].OKFlag[8]:=TRUE;
END_IF;

Rtrig_test(_CLK:=TestPB[8]);
(*PowerOn=0*)
IF NOT(SystemReadyStatus) THEN
	Autoflow:=0;
END_IF;

(*Idle=1*)
IF AutoFlow=0 AND SystemReadyStatus AND NOT(ErrorStatus[8]) AND EStopPB THEN
	AutoFlow:=1;
END_IF;
ORGFlag[8]:=AutoStatus AND S8_Up_LS;
IF Autoflow=3 AND S8_Up_LS THEN
	Autoflow:=1;
END_IF;

IF Autoflow=1 THEN		(*IDLE狀態*)
	AutoIdle[8]:=TRUE;
	ELSE
	AutoIdle[8]:=FALSE;
END_IF;
(*上下出=2*)
IF Autoflow=1
	AND AutoStatus
	AND NOT(DisablePB[8])
	AND ORGFlag[8]
	AND (MachineRunStatus AND NOT(IndexData[8].FinishFlag[8]) AND IndexData[8].FinishFlag[7] AND IndexData[8].OKFlag[7] AND NOT(IndexData[8].NGFlag[7])
	OR Rtrig_test.Q) THEN
	Autoflow:=2;
END_IF;
(*上下回=3*)
TON_1(IN:= Autoflow=2 AND S8_Down_LS ,PT:=t#500ms );
TON_2(IN:= Autoflow=2 AND NOT(S8_Down_LS) ,PT:=t#2s );
IF Autoflow=2 AND TON_1.Q THEN
	IndexData[8].OKFlag[8]:=TRUE;
        Autoflow:=4;
END_IF;
IF Autoflow=2 AND TON_2.Q THEN
	IndexData[8].NgFlag[8]:=TRUE;
	IndexData[8].ErrorRecordData[8]:=4;
        Autoflow:=5;
END_IF;
IF (Autoflow=4 AND IndexData[8].OkFlag[8]) OR (Autoflow=4 AND IndexData[8].NgFlag[8]) THEN
	Autoflow:=3;
END_IF;
(*************************************************************************)
(*Error*)
IF NOT(SystemReadyStatus) OR ErrorStatus[8] OR NOT(EStopPB)  THEN
	IF NOT(IndexData[8].OKFlag[8]) THEN
		IndexData[8].NGFlag[8]:=TRUE;
	END_IF;
	Autoflow:=0;
END_IF;
(*次數異常
IF ResetPB THEN
ErrorCounter:=0;
END_IF;
IF ErrorCounter>=2 THEN
CountError[8]:=TRUE;
END_IF;*)
(*手動*)
(*上下*)
R_TRIG_1(_CLK:= S8_UpDown_PB);
interlockdown:=Index_LS AND NOT(Index_RY);
(*SET*)
IF ((R_TRIG_1.Q AND NOT(UpDownStatus)) OR Autoflow=2) AND interlockdown THEN
	S8_UpDown_SOL:=TRUE;
END_IF;
(*RESET*)
interlockUp:=TRUE;
IF ((R_TRIG_1.Q AND (UpDownStatus)) OR Autoflow=3 OR Initflow=2) AND interlockUp THEN
	S8_UpDown_SOL:=FALSE;
END_IF;
(*STATUS*)
UpDownStatus:=S8_UpDown_SOL;
(********************************************************************)
(*PowerOn=0*)
IF NOT(SystemReadyStatus) THEN
	Initflow:=0;
END_IF;

(*Idle=1*)
IF Initflow=0 THEN
	Initflow:=1;
END_IF;

IF Initflow=2 AND S8_Up_LS THEN
	Initflow:=1;
END_IF;

IF Initflow=1 THEN		(*IDLE狀態*)
	InitIdle[8]:=TRUE;
	ELSE
	InitIdle[8]:=FALSE;
END_IF;
(*上下回=2*)
F_TRIG_1(_CLK:= ErrorStatus[8]);
R_TRIG_2(_CLK:= AutoStatus );
R_TRIG_3(_CLK:= NOT(EStopPB));
IF Initflow=1 AND (F_TRIG_1.Q OR R_TRIG_2.Q OR R_TRIG_3.Q ) THEN
	Initflow:=2;
END_IF;
